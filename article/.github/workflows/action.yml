
# name: NodeJS with Webpack

# on:
#   push:
#     branches: [ "new" ]
#   pull_request:
#     branches: [ "master" ]

# jobs:
#   build:
#     runs-on: ubuntu-latest

#     strategy:
#       matrix:
#         node-version: [ 16.x]

#     steps:
#     - uses: actions/checkout@v3

#     - name: Use Node.js ${{ matrix.node-version }}
#       uses: actions/setup-node@v3
#       with:
#         node-version: ${{ matrix.node-version }}

#     - name: Build
#       run: |
#        yarn

name: Node.js CI/CD Pipeline


on:
  push:
    branches: [ "new" ]
  pull_request:
    branches: [ "master" ]

env:
  DOCKER_BUILDKIT: 0
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
  IMAGE_NAME: myapp

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ env.DOCKER_USERNAME }}
        password: ${{ env.DOCKER_PASSWORD }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v2
      with:
        context: ./article
        push: true
        tags: |
          ${{ env.IMAGE_NAME }}:${{ github.sha }}
          ${{ env.IMAGE_NAME }}:latest

# jobs:
#   build:
#     runs-on: ubuntu-latest
    

#     steps:
#     - uses: actions/checkout@v2
#     - name: Build the Docker image
#     - name: Check working directory
#       run: ls -al

#       uses: docker/build-push-action@v2
#       with:
#         context: ./article
#         push: true
#         tags: username/repo-name:latest
#         dockerfile: Dockerfile

#   deploy:
#     runs-on: ubuntu-latest
#     needs: [build]

#     steps:
#     - uses: actions/checkout@v2
#     - name: Deploy to production
#       run: |
#         docker-compose up -d